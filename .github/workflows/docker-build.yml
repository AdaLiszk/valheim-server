# =================================================================================================
name: "Docker Build"

# =================================================================================================
on:
  pull_request:
    types:
      - synchronize
      - opened
  push:
    branches:
      - develop
      - stable

# =================================================================================================
env:
  image_name: "adaliszk/valheim-server"

# =================================================================================================
jobs:

  #
  # STAGE: LINT
  #
  lint:
    strategy:
      matrix:
        tag: [ "dos2unix", "vanilla" ]
        include:
          - tag: "dos2unix"
            path: "docker/dos2unix"
          - tag: "vanilla"
            path: "server/vanilla"

    runs-on: ubuntu-latest
    name: "Lint"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Shellcheck"
        uses: ludeeus/action-shellcheck@master
        continue-on-error: true
        with:
          scandir: "./${{ matrix.path }}"

      - name: "Hadolint"
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: "${{ matrix.path }}/Dockerfile"

  #
  # STAGE: BUILD
  #
  build-dos2unix:
    needs: [ "lint" ]
    strategy:
      matrix:
        tag: [ "dos2unix", "vanilla" ]
        include:
          - tag: "dos2unix"
            path: "docker/dos2unix"
          - tag: "vanilla"
            path: "server/vanilla"

    runs-on: ubuntu-latest
    name: "Build"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

#      - name: Login to GitHub
#        uses: docker/login-action@v1

      - if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/stable'
        name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Get the tag from Dockertag"
        run: |
          IMAGE_TAG=$(cat ./${{ matrix.path }}/Dockertag)
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_ENV

      - name: "Build ${{ env.image_name }}:${{ matrix.tag }}"
        uses: docker/build-push-action@v2
        with:
          tags: ${{ env.image_name }}:${{ env.image_tag }}
          push: false
