# =================================================================================================
name: "Docker Build"

# =================================================================================================
on:
  pull_request:
    paths:
      - .github/workflows/docker-build.yml
      - images/**/*
      - images/*
    types:
      - synchronize
      - opened
  push:
    paths:
      - .github/workflows/docker-build.yml
      - images/**/*
      - images/*
    branches:
      - develop
      - stable

# =================================================================================================
env:
  image_name: "adaliszk/valheim-server"

# =================================================================================================
jobs:

  #
  # STAGE: LINT
  #
  lint:
    strategy:
      matrix:
        tag: [ "dos2unix", "vanilla" ]

    runs-on: ubuntu-latest
    name: "Lint"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Shellcheck"
        uses: ludeeus/action-shellcheck@master
        continue-on-error: true
        with:
          scandir: "./images/${{ matrix.tag }}"

      - name: "Hadolint"
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: "./images/${{ matrix.tag }}/Dockerfile"

  #
  # STAGE: BUILD
  #
  build:
    needs: [ "lint" ]
    strategy:
      matrix:
        tag: [ "dos2unix", "vanilla" ]

    runs-on: ubuntu-latest
    name: "Build"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Get the tag from Dockertag"
        run: |
          IMAGE_TAG=$(cat ./images/${{ matrix.tag }}/Dockertag)
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "${IMAGE_TAG}" > ${{ env.tag }}.tag

      - name: "Build :${{ matrix.tag }}"
        uses: docker/build-push-action@v2
        with:
          context: ./images/${{ matrix.tag }}
          tags: ${{ env.image_name }}:${{ env.image_tag }}
          push: false

      - name: "Save :${{ matrix.tag }}"
        run: |
          docker buildx save ${{ env.image_name }}:${{ env.image_tag }} | gzip > ${{ env.tag }}.tar.gz

      - name: "Upload Image artifact"
        uses: actions/upload-artifact@v2
        with:
          name: image-${{ env.tag }}
          path: ${{ env.tag }}.*

  #
  # PUSH STAGE
  #
  push:
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/stable'
    needs: [ "build" ]
    strategy:
      matrix:
        registry: [ "docker", "quay" ]
        tag: [ "dos2unix", "vanilla" ]
        includes:
          - tag: "dos2unix"
            tag_latest: false

          - tag: "vanilla"
            tag_latest: true

          - registry: "docker"
            registry_name: "DockerHub"
            registry_username: "DOCKERHUB_USERNAME"
            registry_password: "DOCKERHUB_TOKEN"
            registry_url: ""
            image_prefix: ""

          - registry: "quay"
            registry_name: "QUAY.io"
            registry_username: "QUAY_USERNAME"
            registry_password: "QUAY_TOKEN"
            registry_url: "quay.io"
            image_prefix: "quay.io/"

    runs-on: ubuntu-latest
    name: "Push"
    steps:

      - name: "Download Image artifact"
        uses: actions/download-artifact@v2
        with:
          name: image-${{ env.tag }}

      - name: "Get the tag from Dockertag"
        run: |
          IMAGE_TAG=$(cat ${{ matrix.tag }}.tag)
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Load image into the Docker Cache"
        run: |
          docker buildx load < ${{ matrix.tag }}.tar.gz

      - name: "Login to ${{ matrix.registry_name }}"
        uses: docker/login-action@v1
        with:
          registry: ${{ matrix.registry_url }}
          username: ${{ secrets[matrix.registry_username] }}
          password: ${{ secrets[matrix.registry_username] }}

      - name: "Push ${{ matrix.registry_name }} :${{ matrix.tag }}"
        run: |
          docker buildx push ${{ matrix.image_prefix }}${{ env.image_name }}:${{ env.image_tag }}

      - if: matrix.tag_latest == 'true' # && github.ref == 'refs/heads/stable'
        name: "Push ${{ matrix.registry_name }} :Latest"
        run: |
          echo "retag and push"

